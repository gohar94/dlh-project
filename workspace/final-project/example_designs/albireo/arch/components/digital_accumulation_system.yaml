compound_components:
  version: 0.3
  classes:
    - name: digital_accumulation_system
      attributes:
        technology: 32nm
        latency: 1ns
        datawidth: 8
        n_DAC_cycles: 1
        S_A_datawidth: datawidth
        S_As_per_psum: 1
        # TODO this is assuming ceil(Wz / Nu) = 9 (3x3 filter size) / 3 = 3
        buffer_per_psum: 3
      subcomponents:
        - name: S_A
          class: shift_and_add
          attributes:
            technology: technology
            latency: latency
            datawidth: S_A_datawidth
        - name: outputBuffer
          class: regfile
          attributes:
            depth: 5
            width: 8
            word-bits: 8
            block-size: 1
      actions:
        - name: accumulate
          subcomponents:
            - name: S_A # assume this S_A is fast enough to do the computations needed in one cycle
              actions:
                - name: shift_and_add
                  action_share: S_As_per_psum
            - name: outputBuffer
              actions:
                - name: read
                  arguments:
                    address_delta: 1
                    data_delta: 1
                  action_share: buffer_per_psum
                - name: write
                  arguments:
                    address_delta: 1
                    data_delta: 1
                  action_share: buffer_per_psum
